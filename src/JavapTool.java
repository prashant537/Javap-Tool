
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import javax.swing.*;
import javax.swing.border.Border;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Prashant_Tripathi
 */
@SuppressWarnings("serial")
public class JavapTool extends javax.swing.JFrame {

    
    @SuppressWarnings("static-access")
	public JavapTool() {
        initComponents();
        setResizable(false);
        setLocation(350,115);
        Font f=new Font("Times New Roman",Font.BOLD,17);
        Font f1=new Font("Times New Roman",Font.PLAIN,20);
        Border b=BorderFactory.createEtchedBorder(Color.RED, Color.BLACK);
        Border b1=BorderFactory.createLineBorder(Color.BLUE,5);
        enter.setFont(f);
        name.setBackground(Color.LIGHT_GRAY);
        name.setHorizontalAlignment(name.CENTER);
        name.setBorder(b);
        name.setBackground(Color.WHITE);
        name.setFont(f1);
        fields.setBackground(Color.MAGENTA);
        Dimension d=fields.getSize();
        fields.setFont(f);
        fields.setBorder(b1);
        methods.setBackground(Color.ORANGE);
        methods.setFont(f);
        methods.setBorder(b1);
        methods.setSize(d);
        constructors.setBackground(Color.RED);
        constructors.setFont(f);
        constructors.setBorder(b1);
        constructors.setSize(d);
        interfaces.setBackground(Color.GREEN);
        interfaces.setFont(f);
        interfaces.setBorder(b1);
        interfaces.setSize(d);
        details.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        details = new javax.swing.JTextArea();
        fields = new javax.swing.JButton();
        methods = new javax.swing.JButton();
        constructors = new javax.swing.JButton();
        enter = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        interfaces = new javax.swing.JButton();
        browse = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        details.setColumns(20);
        details.setRows(5);
        jScrollPane1.setViewportView(details);

        fields.setText("FIELDS");
        fields.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fieldsMouseEntered(evt);
            }
        });
        fields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldsActionPerformed(evt);
            }
        });

        methods.setText("METHODS");
        methods.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                methodsMouseEntered(evt);
            }
        });
        methods.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                methodsActionPerformed(evt);
            }
        });

        constructors.setText("CONSTRUCTORS");
        constructors.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                constructorsMouseEntered(evt);
            }
        });
        constructors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                constructorsActionPerformed(evt);
            }
        });

        enter.setText("ENTER CLASS NAME ");

        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        interfaces.setText("INTERFACES");
        interfaces.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                interfacesMouseEntered(evt);
            }
        });
        interfaces.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interfacesActionPerformed(evt);
            }
        });

        browse.setText("Browse ...");
        browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(fields, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(methods, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(constructors, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                .addGap(47, 47, 47))
            .addGroup(layout.createSequentialGroup()
                .addGap(207, 207, 207)
                .addComponent(interfaces, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(browse)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(enter, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enter, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(browse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fields, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(methods, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(constructors, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(interfaces, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void constructorsActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
        if(Valid()){
        	try {
        		Class<?> c=Class.forName(name.getText().toString());
        		GetDetails(c.getConstructors());
            } catch (ClassNotFoundException ex) {
               JOptionPane.showMessageDialog(null,"Can Not Find The Class","Class Not Found !!!",JOptionPane.INFORMATION_MESSAGE);
               details.setText("");
            }
                
        }
    }                                            

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
    }                                    

    private void fieldsActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
       if(Valid()){
    	   try {
               Class<?> c=Class.forName(name.getText().toString());
               GetDetails(c.getFields());
           } catch (ClassNotFoundException ex) {
              JOptionPane.showMessageDialog(null,"Can Not Find The Class","Class Not Found !!!",JOptionPane.INFORMATION_MESSAGE);
              details.setText("");
           }
                
        }
    }                                      

    private void methodsActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        if(Valid()){ 
        	try {
               Class<?> c=Class.forName(name.getText().toString());
               GetDetails(c.getMethods());
            } catch (ClassNotFoundException ex) {
               JOptionPane.showMessageDialog(null,"Can Not Find The Class","Class Not Found !!!",JOptionPane.INFORMATION_MESSAGE);
               details.setText("");
            }
                
        }
    }                                       

    private void interfacesActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
         if(Valid()){
        	 try {
                 Class<?> c=Class.forName(name.getText().toString());
                 GetDetails(c.getInterfaces());
             } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null,"Can Not Find The Class","Class Not Found !!!",JOptionPane.INFORMATION_MESSAGE);
                details.setText("");
             }
                
        }
    }                                          

    private void fieldsMouseEntered(java.awt.event.MouseEvent evt) {                                    
        // TODO add your handling code here:
        Cursor cs=new Cursor(Cursor.HAND_CURSOR);
        fields.setCursor(cs);
    }                                   

    private void methodsMouseEntered(java.awt.event.MouseEvent evt) {                                     
        Cursor cs=new Cursor(Cursor.HAND_CURSOR);
        methods.setCursor(cs);        // TODO add your handling code here:
    }                                    

    private void constructorsMouseEntered(java.awt.event.MouseEvent evt) {                                          
        // TODO add your handling code here:
        Cursor cs=new Cursor(Cursor.HAND_CURSOR);
        constructors.setCursor(cs);
    }                                         

    private void interfacesMouseEntered(java.awt.event.MouseEvent evt) {                                        
        // TODO add your handling code here:
        Cursor cs=new Cursor(Cursor.HAND_CURSOR);
        interfaces.setCursor(cs);
    }                                       

    private void browseActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        JFileChooser f = new JFileChooser();
        int x = f.showOpenDialog(null);
        if (x == JFileChooser.APPROVE_OPTION) {
            @SuppressWarnings("unused")
			String path = f.getSelectedFile().getAbsolutePath();
            StringBuffer ss = new StringBuffer(f.getName(f.getSelectedFile()));
            if (ss.charAt(ss.length() - 1) == 'a') {
                ss.delete(ss.length() - 5, ss.length());
            } else if (ss.charAt(ss.length() - 1) == 's') {
                ss.delete(ss.length() - 6, ss.length());
            }
            String s = ss.toString();
            name.setText(s);
        }
    }

    /**
     * @param args the command line arguments
     */
    private boolean Valid(){
        if(name.getText().equals("")){
            
            JOptionPane.showMessageDialog(null, "Enter A Valid Class Name","Invalid Class Name",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;    
        
    }
    
    
    private void GetDetails(Object o[]){
        String data="";
        int k=1;
        if(o.length!=0){
            Font ff=new Font("Arial",Font.PLAIN,15);
            details.setFont(ff);
         for(int i=0;i<o.length;i++){
             data=data+(k++)+".)"+"\t"+o[i].toString()+"\n";
	     details.setText(data);
         }   
        }
        else {
            Font f=new Font("Arial",Font.BOLD,20);
            details.setFont(f);
            details.setText("NOTHING TO SHOW !!!");
        }
    }
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JavapTool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JavapTool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JavapTool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JavapTool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new JavapTool().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify
    private javax.swing.JButton browse;
    private javax.swing.JButton constructors;
    private javax.swing.JTextArea details;
    private javax.swing.JLabel enter;
    private javax.swing.JButton fields;
    private javax.swing.JButton interfaces;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton methods;
    private javax.swing.JTextField name;
    // End of variables declaration
}
